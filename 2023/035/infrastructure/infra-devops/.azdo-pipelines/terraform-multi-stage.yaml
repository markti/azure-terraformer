trigger:
- none

name: "$(Build.DefinitionName)$(Rev:.r)"

pool:
  vmImage: "ubuntu-20.04"

stages:
- stage: Plan
  jobs: 
  - job: plan
    timeoutInMinutes: 0
    steps:

    - task: TerraformInstaller@0
      displayName: install terraform
      inputs:
        terraformVersion: 1.4.5

    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: "ssh.dev.azure.com"
        sshKeySecureFile: terraform-id_rsa

    - task: Bash@3
      displayName: "terraform validate"
      inputs:
        filePath: .azdo-pipelines/scripts/terraform-with-backend.sh
        workingDirectory: $(WorkingDirectory)
        arguments: validate
      env: 
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        BACKEND_RESOURCE_GROUP_NAME: $(BACKEND_RESOURCE_GROUP_NAME)
        BACKEND_STORAGE_ACCOUNT_NAME: $(BACKEND_STORAGE_ACCOUNT_NAME)
        BACKEND_STORAGE_CONTAINER_NAME: $(BACKEND_STORAGE_CONTAINER_NAME)
        TF_BACKEND_KEY: $(ApplicationName)-$(EnvironmentName)

    - task: Bash@3
      displayName: "terraform plan"
      inputs:
        filePath: .azdo-pipelines/scripts/terraform-with-backend.sh
        workingDirectory: $(WorkingDirectory)
        arguments: plan -var-file="env-$(EnvironmentName).tfvars" -out=$(ApplicationName)-$(EnvironmentName).tfplan
      env: 
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        BACKEND_RESOURCE_GROUP_NAME: $(BACKEND_RESOURCE_GROUP_NAME)
        BACKEND_STORAGE_ACCOUNT_NAME: $(BACKEND_STORAGE_ACCOUNT_NAME)
        BACKEND_STORAGE_CONTAINER_NAME: $(BACKEND_STORAGE_CONTAINER_NAME)
        TF_BACKEND_KEY: $(ApplicationName)-$(EnvironmentName)
    - task: PublishPipelineArtifact@1
      inputs: 
        targetPath: $(System.DefaultWorkingDirectory)/$(WorkingDirectory)/$(ApplicationName)-$(EnvironmentName).tfplan
        artifactName: tfplan

- stage: Apply
  jobs: 
  - deployment: terraform
    timeoutInMinutes: 0
    environment:
      name: $(ApplicationName)-$(EnvironmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self    
          - task: TerraformInstaller@0
            displayName: install terraform
            inputs:
              terraformVersion: 1.4.5
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: tfplan
              pattern: '**/*.tfplan'
              path: $(Build.SourcesDirectory)/$(WorkingDirectory)
          - task: InstallSSHKey@0
            inputs:
              knownHostsEntry: "ssh.dev.azure.com"
              sshKeySecureFile: terraform-id_rsa
          - task: Bash@3
            displayName: "terraform validate"
            inputs:
              filePath: .azdo-pipelines/scripts/terraform-with-backend.sh
              workingDirectory: $(WorkingDirectory)
              arguments: validate
            env: 
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              BACKEND_RESOURCE_GROUP_NAME: $(BACKEND_RESOURCE_GROUP_NAME)
              BACKEND_STORAGE_ACCOUNT_NAME: $(BACKEND_STORAGE_ACCOUNT_NAME)
              BACKEND_STORAGE_CONTAINER_NAME: $(BACKEND_STORAGE_CONTAINER_NAME)
              TF_BACKEND_KEY: $(ApplicationName)-$(EnvironmentName)

          - task: Bash@3
            displayName: "terraform apply"
            inputs:
              filePath: .azdo-pipelines/scripts/terraform-with-backend.sh
              workingDirectory: $(WorkingDirectory)
              arguments: apply -auto-approve $(ApplicationName)-$(EnvironmentName).tfplan
            env: 
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              BACKEND_RESOURCE_GROUP_NAME: $(BACKEND_RESOURCE_GROUP_NAME)
              BACKEND_STORAGE_ACCOUNT_NAME: $(BACKEND_STORAGE_ACCOUNT_NAME)
              BACKEND_STORAGE_CONTAINER_NAME: $(BACKEND_STORAGE_CONTAINER_NAME)
              TF_BACKEND_KEY: $(ApplicationName)-$(EnvironmentName)
